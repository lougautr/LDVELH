package mode;

import org.json.simple.*;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;
import java.util.Iterator;
import javax.swing.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.FileWriter;
import java.lang.Process;

import noeud.*;
import principal.*;

public class ModifierChargerHistoire{
  private String file;
  protected Fenetre principal;
  protected JPanel pannelPrincipal;
  protected boolean test;

  public ModifierChargerHistoire(String file, Fenetre principal, JPanel pannelPrincipal, boolean test){
    //this.file = file;
    //this.principal = principal;
    //this.pannelPrincipal = pannelPrincipal;
    JSONParser parser = new JSONParser();

      try (Reader reader = new FileReader(file)) {
        JSONObject jsonObject = (JSONObject) parser.parse(reader);
        JSONObject sections = (JSONObject) jsonObject.get("sections");
        principal.setSections(sections);
        JSONArray intro = (JSONArray) jsonObject.get("intro_sequence");

        File output = new File("output.dot");
        FileWriter writer = new FileWriter(output);

        Noeud n = new Noeud(sections, "1");
        ArrayList<String> listeChoix = new ArrayList<>();
        listeChoix = n.getChoiceNumber();

        String texteIntro = "";
        for(int i = 0; i < intro.size(); i++){
          texteIntro += intro.get(i) + "\n";
        }

        writer.write(n.toDot2());
        writer.flush();
        writer.close();

        Runtime rt = Runtime.getRuntime();
        Process prGraph = rt.exec("dot -Tjpg -o output.jpg output.dot");

        System.out.println(System.getProperty("os.name"));
        ModeEdition edition = new ModeEdition(texteIntro, principal.getTestField1(), pannelPrincipal, principal.getPanelTexte(), principal.getPanelBoutonDebut(), principal.getPanelMenu(), principal.getDicoSections(), principal.getDicoTexteSections(), sections, principal);
        ModeLecture lecture = new ModeLecture(texteIntro, principal.getTestField1(), pannelPrincipal, principal.getPanelTexte(), principal.getPanelBoutonDebut(), principal.getPanelMenu(), principal.getDicoSections(), principal.getDicoTexteSections(), sections, principal, edition);

        //fenetre.afficherIntro(texteIntro);
        if(test)
          edition.afficherIntro(texteIntro);
        else
          lecture.afficherIntro(texteIntro);
        System.out.println(file);

        int exitCode = prGraph.waitFor();
        System.out.println(exitCode);
      }

      catch (Exception ex) {
        ex.printStackTrace();
      }
  }

  public void main(){


  }

}
